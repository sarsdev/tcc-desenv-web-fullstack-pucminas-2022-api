{
  "openapi": "3.0.3",
  "info": {
    "title": "ApontaDev",
    "description": "Específicação criada para o desenvolvimento do trabalho de conclusão do curso de Desenvolvimento Web Full Stack turma 2021 / 2022.\n\nEssa é a Web API que será utilizada pela aplicação Web ApontaDev e que está dados simulados (Mock). Em sua maioria os endpoints serão utilizados pela aplicação para executar as operações, porém, alguns endpoints sinalidados na descrição estarão disponíveis para acesso externo usando dados de usuários devidamente cadastrados.\n\nPara saber mais sobre o projeto:\n- [GitHub](https://github.com/sarsdev/tcc-desenv-web-fullstack-pucminas-2022)",
    "license": {
      "name": "MIT license",
      "url": "https://github.com/sarsdev/tcc-desenv-web-fullstack-pucminas-2022/blob/main/LICENSE"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Veja mais sobre o Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://apontadev.swagger.io/api/v3"
    }
  ],
  "tags": [
    {
      "name": "Usuário",
      "description": "Dados de usuários"
    },
    {
      "name": "Permissão",
      "description": "Dados de permissões dentro da aplicação"
    },
    {
      "name": "Acessibiliade",
      "description": "Dados de acessibilidade dentro da aplicação"
    },
    {
      "name": "Funcao",
      "description": "Dados de funções dentro da aplicação"
    },
    {
      "name": "Equipe",
      "description": "Dados de equipes dentro da aplicação"
    },
    {
      "name": "Projeto",
      "description": "Dados de projetos dentro da aplicação"
    },
    {
      "name": "Apontamento",
      "description": "Dados de apontamento dentro da aplicação"
    },
    {
      "name": "Analise",
      "description": "Dados de apontamento dentro da aplicação"
    },
    {
      "name": "Relatorio",
      "description": "Dados de equipes dentro da aplicação"
    }
  ],
  "paths": {
    "/usuario/acesso/autenticacao": {
      "post": {
        "tags": [
          "Usuário"
        ],
        "summary": "Valida as credenciais do usuário",
        "description": "Verifica se as credenciais (usuário, senha e código google autenticador) são válidos",
        "operationId": "postValidaUsuario",
        "requestBody": {
          "description": "Dados para serem validados",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/autenticacao_usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário autenticado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "404": {
            "description": "Nome do usuário não encontrado"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/usuario/acesso/log": {
      "get": {
        "tags": [
          "Usuário"
        ],
        "summary": "Retorna os dados do log de acesso do usuário",
        "description": "Retorna todos os dados do log de acesso do usuário",
        "operationId": "getAcessLogUsers",
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usuario_log"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Usuário"
        ],
        "summary": "Atualiza a situação do usuário",
        "description": "Permite alterar a situação do usuário",
        "operationId": "postAcessLogUser",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usuario_log"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "404": {
            "description": "Nome do usuário não encontrado"
          },
          "409": {
            "description": "A situação do usuário já definida anteriormente"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/usuario/acesso": {
      "get": {
        "tags": [
          "Usuário"
        ],
        "summary": "Retorna os dados para saber se o usuário pode criar a senha",
        "description": "Retorna os dados não sensíveis de um usuário pesquisado por e-mail",
        "operationId": "getAcessoUsuario",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "E-mail que o usuário informou para acesso",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usuario@host.com.br"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/acesso_usuario_resp200"
                }
              }
            }
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "404": {
            "description": "Nome do usuário não encontrado"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Usuário"
        ],
        "summary": "Criar as credenciais do usuário",
        "description": "Permite criar as credenciais (usuário e senha) para um usuário",
        "operationId": "postCredenciaisUsuario",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/criacao_usuario"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "404": {
            "description": "Nome do usuário não encontrado"
          },
          "409": {
            "description": "Usuário já tem credencias criadas"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/usuario/projeto": {
      "get": {
        "tags": [
          "Usuário"
        ],
        "summary": "Retorna os dados dos projetos por usuário",
        "description": "Retorna os dados dos projetos em que o usuário está vinculado",
        "operationId": "getProjectUser",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "E-mail que o usuário informou para acesso",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usuario@host.com.br"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projeto"
                }
              }
            }
          },
          "404": {
            "description": "Nome do usuário não encontrado"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/usuario": {
      "get": {
        "tags": [
          "Usuário"
        ],
        "summary": "Retorna os dados cadastrados do usuário",
        "description": "Retorna todos os dados dos usuários cadastrados",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usuario"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Usuário"
        ],
        "summary": "Criar ou atualizar usuário",
        "description": "Permite criar ou atualizar os dados do usuário",
        "operationId": "postUser",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso"
          },
          "201": {
            "description": "Usuário criado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/permissao": {
      "get": {
        "tags": [
          "Permissão"
        ],
        "summary": "Retorna os dados de permissões atribuidas na aplicação",
        "description": "Retorna os dados de permissões",
        "operationId": "getAllPermissoes",
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas as permissões existentes ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/permissao"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Permissão"
        ],
        "summary": "Criar nova regra de permissão",
        "description": "Permite criar novas regras de permissões na aplicação",
        "operationId": "postPermissao",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/criacao_permissao"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "404": {
            "description": "Nome do usuário não encontrado"
          },
          "409": {
            "description": "Usuário já tem credencias criadas"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "delete": {
        "tags": [
          "Permissão"
        ],
        "summary": "Excluir uma regra de permissão",
        "description": "Permite remover uma permissão da aplicação",
        "operationId": "deletePermissao",
        "parameters": [
          {
            "name": "sequencial_permissao",
            "in": "query",
            "description": "Sequencial da permissão que será removida",
            "required": true,
            "schema": {
              "type": "number",
              "example": 123
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permissão removida com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "404": {
            "description": "Sequencial não encontrado"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/acessibilidade": {
      "get": {
        "tags": [
          "Acessibiliade"
        ],
        "summary": "Retorna os dados de acessibilidade do usuário na aplicação",
        "description": "Retorna os dados de acessibilidade por usuário",
        "operationId": "getParamAcessibilidadeByUser",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "E-mail que o usuário informou para acesso",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usuario@host.com.br"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna as parametrizações de acessibilidade para o usuário",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/acessibilidade"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Acessibiliade"
        ],
        "summary": "Atualiza as definições de acessibilidade",
        "description": "Permite atualizar as definições de acessibilidade na aplicação",
        "operationId": "postAcessibilidade",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/acessibilidade"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dados atualizados com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "404": {
            "description": "Nome do usuário não encontrado"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/funcao/filtro": {
      "get": {
        "tags": [
          "Funcao"
        ],
        "summary": "Retorna os dados de funções na aplicação",
        "description": "Retorna os dados das funções",
        "operationId": "getFunctionByCodeAndName",
        "parameters": [
          {
            "name": "codigo_funcao",
            "in": "query",
            "description": "Código da função na base de dados",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "100"
            }
          },
          {
            "name": "nome",
            "in": "query",
            "description": "Texto utilizado para pesquisar as funções pelo campo nome (pesquisa por texto completo ou parcial)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "desenvol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas as funções existentes ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/funcao"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/funcao": {
      "get": {
        "tags": [
          "Funcao"
        ],
        "summary": "Retorna todos dados de funções na aplicação",
        "description": "Retorna todos dados das funções",
        "operationId": "getAllFunction",
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas as funções existentes ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/funcao"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Funcao"
        ],
        "summary": "Criar ou atualizar função",
        "description": "Permite criar ou atualizar os dados de uma função",
        "operationId": "postFunction",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/funcao"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Função atualizada com sucesso"
          },
          "201": {
            "description": "Função criada com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/equipe/filtro": {
      "get": {
        "tags": [
          "Equipe"
        ],
        "summary": "Retorna os dados de equipes na aplicação",
        "description": "Retorna os dados das equipes",
        "operationId": "getEquipsByCodeAndName",
        "parameters": [
          {
            "name": "codigo_equipe",
            "in": "query",
            "description": "Código da equipe na base de dados",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "100"
            }
          },
          {
            "name": "nome",
            "in": "query",
            "description": "Texto utilizado para pesquisar as equipes pelo campo nome (pesquisa por texto completo ou parcial)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Equipe 001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas as equipes existentes ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/equipe"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/equipe/usuario": {
      "get": {
        "tags": [
          "Equipe"
        ],
        "summary": "Retorna os dados de usuários vinculados a equipe",
        "description": "Retorna a lista de usuários vinculados a uma equipe",
        "operationId": "getUsersEquip",
        "parameters": [
          {
            "name": "codigo_equipe",
            "in": "query",
            "description": "Código da equipe na base de dados",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "100"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas os usuários vinculados ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usuario"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Equipe"
        ],
        "summary": "Cria o vinculo de usuários e equipe",
        "description": "Permite vincular uma lista de usuários a uma equipe",
        "operationId": "postUserEquip",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/equipe-usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vinculo criado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "delete": {
        "tags": [
          "Equipe"
        ],
        "summary": "Remove o vinculo de usuários e equipe",
        "description": "Permite remover o vinculo uma lista de usuários a uma equipe",
        "operationId": "deleteUserEquip",
        "parameters": [
          {
            "name": "codigo_equipe",
            "in": "query",
            "description": "Código da equipe na base de dados",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 100
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "E-mail que o usuário informou para acesso",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usuario@host.com.br"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vinculo removido com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/equipe": {
      "get": {
        "tags": [
          "Equipe"
        ],
        "summary": "Retorna os dados de equipes na aplicação",
        "description": "Retorna todos os dados das equipes",
        "operationId": "getAllEquips",
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas as equipes existentes ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/equipe"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Equipe"
        ],
        "summary": "Criar ou atualizar equipe",
        "description": "Permite criar ou atualizar os dados de uma equipe",
        "operationId": "postEquip",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/equipe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Equipe atualizada com sucesso"
          },
          "201": {
            "description": "Equipe criada com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/projeto/usuario": {
      "get": {
        "tags": [
          "Projeto"
        ],
        "summary": "Retorna os dados de usuários vinculados ao projeto",
        "description": "Retorna a lista de usuários vinculados a uma projeto",
        "operationId": "getUsersProject",
        "parameters": [
          {
            "name": "codigo_projeto",
            "in": "query",
            "description": "Código do projeto na base de dados",
            "required": false,
            "schema": {
              "type": "integer",
              "example": "100"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas os usuários vinculados ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usuario"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Projeto"
        ],
        "summary": "Cria o vinculo de usuários e projeto",
        "description": "Permite vincular uma lista de usuários a um projeto",
        "operationId": "postUserProject",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/projeto-usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vinculo criado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "delete": {
        "tags": [
          "Projeto"
        ],
        "summary": "Remove o vinculo de usuários e projeto",
        "description": "Permite remover o vinculo uma lista de usuários a um projeto",
        "operationId": "deleteUserProject",
        "parameters": [
          {
            "name": "codigo_projeto",
            "in": "query",
            "description": "Código do projeto na base de dados",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 100
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "E-mail que o usuário informou para acesso",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usuario@host.com.br"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vinculo removido com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/projeto/log": {
      "get": {
        "tags": [
          "Projeto"
        ],
        "summary": "Retorna os dados de log de alteração no projeto",
        "description": "Retorna a lista de logs de alterações executadas em um projeto",
        "operationId": "getLogProject",
        "parameters": [
          {
            "name": "codigo_projeto",
            "in": "query",
            "description": "Código do projeto na base de dados",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "100"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projeto-log"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/projeto": {
      "get": {
        "tags": [
          "Projeto"
        ],
        "summary": "Retorna os dados de equipes na aplicação",
        "description": "Retorna todos os dados das equipes",
        "operationId": "getAllProject",
        "responses": {
          "200": {
            "description": "Retorno com sucesso. Retorna a lista de todas as equipes existentes ou uma lista vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projeto"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Projeto"
        ],
        "summary": "Criar ou atualizar projetos",
        "description": "Permite criar ou atualizar os dados de um projeto",
        "operationId": "postProject",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/projeto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Projeto atualizado com sucesso"
          },
          "201": {
            "description": "Projeto criado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/agenda/parametro": {
      "get": {
        "tags": [
          "Apontamento"
        ],
        "summary": "Retorna as parametrizações do usuário",
        "description": "Retorna as parametrizações do usuário para a tela de agenda",
        "operationId": "getParamSchedule",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "E-mail que o usuário informou para acesso",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usuario@host.com.br"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agenda-parametro"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Apontamento"
        ],
        "summary": "Atualiza parâmetros pessoal da agenda",
        "description": "Permite atualizar os parâmetros pessoais do usuário na tela da agenda",
        "operationId": "postParamSchedule",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agenda-parametro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Parâmetros atualizados com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/agenda/apontamento": {
      "get": {
        "tags": [
          "Apontamento"
        ],
        "summary": "Retorna os apontamentos do usuário",
        "description": "Retorna os apontamentos realizados pelo usuário em um período específico ou geral",
        "operationId": "getApontamento",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "E-mail que o usuário informou para acesso",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usuario@host.com.br"
            }
          },
          {
            "name": "data-inicial",
            "in": "query",
            "description": "Data inicial para fazer a busca",
            "required": false,
            "schema": {
              "type": "string",
              "example": "01/01/2001 23:59:59"
            }
          },
          {
            "name": "data-final",
            "in": "query",
            "description": "Data final para fazer a busca",
            "required": false,
            "schema": {
              "type": "string",
              "example": "01/01/2001 23:59:59"
            }
          },
          {
            "name": "codigo-projeto",
            "in": "query",
            "description": "Código do projeto para fazer a busca dos apontamento vinculados",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agenda-apontamento"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "post": {
        "tags": [
          "Apontamento"
        ],
        "summary": "Cria ou atualiza um apontamento",
        "description": "Permite criar ou atualizar um apontamento realizado pelo usuário",
        "operationId": "postApontamento",
        "requestBody": {
          "description": "Campos adicionais passados no Json serão ignorados. A ausência de qualquer campo gerará um erro.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agenda-apontamento"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Apontamento atualizados com sucesso"
          },
          "201": {
            "description": "Apontamento criado com sucesso"
          },
          "400": {
            "description": "Corpo da requição fora do padrão ou com dados inválidos"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      },
      "delete": {
        "tags": [
          "Apontamento"
        ],
        "summary": "Remove um apontamento",
        "description": "Permite remover um apontamento realizado pelo usuário",
        "operationId": "deleteApontamento",
        "parameters": [
          {
            "name": "sequencial-apontamento",
            "in": "query",
            "description": "Código sequencial que identifica o apontamento",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 11
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apontamento removido com sucesso"
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/simulador": {
      "get": {
        "tags": [
          "Analise"
        ],
        "summary": "Retorna os dados totalizados do projeto",
        "description": "Retorna os dados de um projeto para permitir a análise do estima, consumo e projeção",
        "operationId": "getSimulador",
        "parameters": [
          {
            "name": "sequencial_projeto",
            "in": "query",
            "description": "Sequencial interno que identifica o projeto",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/acompanhamento"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/acompanhamento": {
      "get": {
        "tags": [
          "Analise"
        ],
        "summary": "Retorna os dados totalizados do projeto",
        "description": "Retorna os dados de um projeto para permitir a análise do estima e consumo",
        "operationId": "getAcompanhamento",
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/acompanhamento"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/relatorio/visao-macro/usuario": {
      "get": {
        "tags": [
          "Relatorio"
        ],
        "summary": "Retorna os dados de visao macro do usuário",
        "description": "Retorna os dados de totalizados e gráficos exibidos para a visão macro dos usuários",
        "operationId": "getMacroVisionUser",
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visao-macro-usuario"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/relatorio/visao-macro/funcao": {
      "get": {
        "tags": [
          "Relatorio"
        ],
        "summary": "Retorna os dados de visao macro das funções",
        "description": "Retorna os dados de totalizados e gráficos exibidos para a visão macro das funções",
        "operationId": "getMacroVisionFunction",
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visao-macro-funcao"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    },
    "/relatorio/visao-macro/equipe": {
      "get": {
        "tags": [
          "Relatorio"
        ],
        "summary": "Retorna os dados de visao macro das equipes",
        "description": "Retorna os dados de totalizados e gráficos exibidos para a visão macro das equipes",
        "operationId": "getMacroVisionEquips",
        "responses": {
          "200": {
            "description": "Retorno com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/visao-macro-equipe"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado durante o processamento"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "autenticacao_usuario": {
        "type": "object",
        "properties": {
          "nome_usuario": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "senha": {
            "type": "string",
            "example": "rT6Jo06Y8"
          },
          "codigo_google": {
            "type": "integer",
            "format": "int32",
            "example": 986365
          }
        }
      },
      "criacao_usuario": {
        "type": "object",
        "properties": {
          "nome_usuario": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "senha": {
            "type": "string",
            "example": "rT6Jo06Y8"
          }
        }
      },
      "acesso_usuario_resp200": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "situacao_acesso": {
            "type": "string",
            "example": "aprovado",
            "enum": [
              "aprovado",
              "rejeitado",
              "aguardando"
            ]
          },
          "criar_credenciais": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "usuario": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "nome": {
            "type": "string",
            "example": "usuario"
          },
          "cargo": {
            "type": "string",
            "example": "desenvolvedor junior"
          },
          "funcao": {
            "type": "string",
            "example": "desenvolvedor"
          },
          "equipe": {
            "type": "string",
            "example": "equipe 001"
          },
          "fator_produtividade": {
            "type": "number",
            "example": "1.36"
          },
          "situacao": {
            "type": "string",
            "example": "ativo",
            "enum": [
              "ativo",
              "inativo"
            ]
          }
        }
      },
      "usuario_log": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "nome": {
            "type": "string",
            "example": "usuario"
          },
          "data_hora_ult_acesso": {
            "type": "string",
            "example": "01/01/2001 23:59:59"
          },
          "situacao_acesso": {
            "type": "string",
            "example": "pendente",
            "enum": [
              "pentende",
              "aprovado",
              "rejeitado"
            ]
          }
        }
      },
      "permissao": {
        "type": "object",
        "properties": {
          "usuario_cadastrado": {
            "type": "object",
            "example": {
              "sequencial_permissao": 1,
              "tela": "permissao",
              "funcionalidade": [
                "incluir",
                "excluir",
                "atualizar"
              ],
              "Equipe": [
                "Equipe A",
                "Equipe B"
              ],
              "Funcao": [
                "oordenação",
                "Analista",
                "Desenvolvedor"
              ],
              "Usuario": [],
              "Acesso": "bloqueio"
            }
          },
          "usuario_nao_cadastrados": {
            "type": "object",
            "example": {
              "sequencia_permissao": 10,
              "tela": "equipe",
              "funcionalidade": [
                "incluir",
                "excluir",
                "atualizar"
              ],
              "Equipe": [
                "Equipe A",
                "Equipe B"
              ],
              "Funcao": [
                "oordenação",
                "Analista",
                "Desenvolvedor"
              ],
              "Usuario": [],
              "Acesso": "bloqueio"
            }
          }
        }
      },
      "criacao_permissao": {
        "type": "object",
        "properties": {
          "usuario_cadastrado": {
            "type": "object",
            "example": {
              "tela": {
                "type": "string",
                "example": "permissao"
              },
              "funcionalidade": {
                "type": "string[]",
                "example": [
                  "incluir",
                  "excluir",
                  "atualizar"
                ]
              },
              "Equipe": {
                "type": "string[]",
                "example": [
                  "Equipe A",
                  "Equipe B"
                ]
              },
              "Funcao": {
                "type": "string[]",
                "example": [
                  "oordenação",
                  "Analista",
                  "Desenvolvedor"
                ]
              },
              "Usuario": {
                "type": "string[]",
                "example": []
              },
              "Acesso": {
                "type": "string",
                "example": "bloqueio"
              }
            }
          }
        }
      },
      "funcao": {
        "type": "object",
        "properties": {
          "sequencial_funcao": {
            "type": "number",
            "example": 1
          },
          "funcao": {
            "type": "string",
            "example": "Função A"
          },
          "percentual_simulacao": {
            "type": "integer",
            "example": 100
          },
          "fator_estimativa": {
            "type": "number",
            "example": 1
          },
          "situacao": {
            "type": "string",
            "example": "ativo",
            "enum": [
              "ativo",
              "inativar"
            ]
          }
        }
      },
      "equipe": {
        "type": "object",
        "properties": {
          "sequencial_equipe": {
            "type": "number",
            "example": 1
          },
          "equipe": {
            "type": "string",
            "example": "Equipe A"
          },
          "descricao": {
            "type": "string",
            "example": "Time que atente as demandas iniciais"
          },
          "situacao": {
            "type": "string",
            "example": "Ativo"
          }
        }
      },
      "equipe-usuario": {
        "type": "object",
        "properties": {
          "sequencial_equipe": {
            "type": "number",
            "example": 100
          },
          "sequencial_usuario": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": [
                100,
                101
              ]
            }
          }
        }
      },
      "projeto": {
        "type": "object",
        "properties": {
          "sequencial_projeto": {
            "type": "number",
            "example": 1001
          },
          "nome_projeto": {
            "type": "string",
            "example": "Projeto A"
          },
          "codigo_externo": {
            "type": "string",
            "example": "Projeto A01"
          },
          "descricao": {
            "type": "string",
            "example": "Projeto geral para entrega"
          },
          "tipo": {
            "type": "string",
            "example": "externo",
            "enum": [
              "interno",
              "externo"
            ]
          },
          "nome_cliente": {
            "type": "string",
            "example": "Cliente X"
          },
          "previsao_conclusao": {
            "type": "string",
            "example": "31/01/2001 23:59:59"
          },
          "inicio_vigencia": {
            "type": "string",
            "example": "01/01/2001 23:59:59"
          },
          "final_vigencia": {
            "type": "string",
            "example": "31/01/2001 23:59:59"
          },
          "horas_estimadas": {
            "type": "integer",
            "example": 150
          },
          "etapa": {
            "type": "string",
            "example": "backlog",
            "enum": [
              "backlog",
              "analise",
              "andamento",
              "concluido"
            ]
          },
          "situacao": {
            "type": "string",
            "example": "ativo",
            "enum": [
              "ativo",
              "inativo"
            ]
          }
        }
      },
      "projeto-usuario": {
        "type": "object",
        "properties": {
          "sequencial_projeto": {
            "type": "number",
            "example": 100
          },
          "sequencial_usuario": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": [
                100,
                101,
                102
              ]
            }
          }
        }
      },
      "projeto-log": {
        "type": "object",
        "properties": {
          "sequencial_projeto": {
            "type": "number",
            "example": 100
          },
          "tipo_evento": {
            "type": "string",
            "example": "atualizando",
            "enum": [
              "inserindo",
              "atualizando",
              "removendo"
            ]
          },
          "data_hora_ocorrencia": {
            "type": "string",
            "example": "31/01/2001 23:59:59"
          },
          "usuario_ocorrencia": {
            "type": "string",
            "example": "usuario X"
          },
          "detalhamento": {
            "type": "string",
            "example": "Alterado o campo Descrição de '' para 'Este projeto é um exemplo'"
          }
        }
      },
      "agenda-parametro": {
        "type": "object",
        "properties": {
          "nome_usuario": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "quatidade-horas-jornada": {
            "type": "string",
            "example": "08:00"
          },
          "ordenar-grid-ultapontamento": {
            "type": "boolean",
            "example": true
          },
          "abrir-obs-apontamento": {
            "type": "boolean",
            "example": true
          },
          "encerrar-apontamento-quando-abrir-novo": {
            "type": "boolean",
            "example": true
          },
          "texto-padrao-obs": {
            "type": "string",
            "example": "Rotina interna XXX em trabalho remoto"
          }
        }
      },
      "agenda-apontamento": {
        "type": "object",
        "properties": {
          "sequencial_apontamento": {
            "type": "integer",
            "example": 11
          },
          "nome_usuario": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "data_hora_inicial": {
            "type": "string",
            "example": "01/01/2001 08:00:00"
          },
          "data_hora_final": {
            "type": "string",
            "example": "01/01/2001 09:00:00"
          },
          "duracao": {
            "type": "string",
            "example": "01:00:00"
          },
          "sequencial_projeto": {
            "type": "integer",
            "example": 1001
          },
          "tipo_projeto": {
            "type": "string",
            "example": "externo",
            "enum": [
              "interno",
              "externo"
            ]
          },
          "nome_projeto": {
            "type": "string",
            "example": "Projeto A"
          },
          "funcao_usuario": {
            "type": "string",
            "example": "Função A"
          },
          "estimativa_funcao_projeto": {
            "type": "string",
            "example": "75:00:00"
          },
          "tipo_apontamento": {
            "type": "string",
            "example": "normal",
            "enum": [
              "normal",
              "compensacao"
            ]
          },
          "obs_apontamento": {
            "type": "string",
            "example": null
          }
        }
      },
      "acessibilidade": {
        "type": "object",
        "properties": {
          "nome_usuario": {
            "type": "string",
            "example": "usuario@host.com.br"
          },
          "modo_visual": {
            "type": "boolean",
            "example": true
          },
          "modo_atalho_unico": {
            "type": "boolean",
            "example": true
          },
          "tema_aplicacao": {
            "type": "string",
            "example": "Tema padrão"
          }
        }
      },
      "acompanhamento": {
        "type": "object",
        "properties": {
          "sequencial_projeto": {
            "type": "number",
            "example": 1001
          },
          "nome_projeto": {
            "type": "string",
            "example": "Projeto A"
          },
          "tipo": {
            "type": "string",
            "example": "externo",
            "enum": [
              "interno",
              "externo"
            ]
          },
          "etapa": {
            "type": "string",
            "example": "backlog",
            "enum": [
              "backlog",
              "analise",
              "andamento",
              "concluido"
            ]
          },
          "horas_estimadas": {
            "type": "string",
            "example": "559:59:59"
          },
          "horas_consumidas": {
            "type": "string",
            "example": "339:31:01"
          },
          "data_previsao": {
            "type": "string",
            "example": "01/01/2001 23:59:59"
          },
          "quantidade_dias_restante": {
            "type": "integer",
            "example": 20
          }
        }
      },
      "visao-macro-usuario": {
        "type": "object",
        "properties": {
          "total-usuarios-cadastrados": {
            "type": "integer",
            "example": 100
          },
          "total-acessos-autonomos": {
            "type": "integer",
            "example": 100
          },
          "fator-medio-produtividade": {
            "type": "number",
            "example": 0.89
          },
          "usuario-funcao": {
            "type": "object",
            "example": {
              "funcao": "função 001",
              "quantidade": 100
            }
          },
          "usuario-equipe": {
            "type": "object",
            "example": {
              "equipe": "equipe 001",
              "quantidade": 100
            }
          }
        }
      },
      "visao-macro-funcao": {
        "type": "object",
        "properties": {
          "total-funcoes-cadastradas": {
            "type": "integer",
            "example": 100
          },
          "usuario-funcao": {
            "type": "object",
            "example": {
              "funcao": "função 001",
              "quantidade": 100
            }
          },
          "fator-funcao": {
            "type": "object",
            "example": {
              "equipe": "função 001",
              "quantidade": 0.98
            }
          }
        }
      },
      "visao-macro-equipe": {
        "type": "object",
        "properties": {
          "total-equipes-cadastradas": {
            "type": "integer",
            "example": 100
          },
          "media-usuarios-equipes": {
            "type": "number",
            "example": 5.9
          },
          "media-funcoes-equipes": {
            "type": "number",
            "example": 3.98
          },
          "fator-equipe": {
            "type": "object",
            "example": {
              "equipe": "equipe 001",
              "quantidade": 0.91
            }
          }
        }
      },
      "visao-macro-projeto": {
        "type": "object",
        "properties": {
          "total-projetos-cadastradas": {
            "type": "integer",
            "example": 100
          },
          "media-estimado-executado": {
            "type": "number",
            "example": 0.89
          },
          "projeto-tipo": {
            "type": "object",
            "example": {
              "tipo": "interno",
              "estimado": 155
            }
          },
          "projeto-etapa": {
            "type": "object",
            "example": {
              "tipo": "backlog",
              "estimado": 22
            }
          }
        }
      }
    }
  }
}